name: Deploy RustDesk Infrastructure
on:
  workflow_dispatch:
    inputs:
      tf_action:
        description: 'Terraform action (apply/destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

env:
  AWS_REGION: "us-west-1"
  ANSIBLE_USER: "ubuntu"

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init -chdir=terraform

      - name: Terraform Validate
        run: terraform validate -chdir=terraform

      - name: Terraform Plan/Apply/Destroy
        run: |
          if [ "${{ github.event.inputs.tf_action }}" == "apply" ]; then
            terraform plan -chdir=terraform
            terraform apply -auto-approve -chdir=terraform
          else
            terraform destroy -auto-approve -chdir=terraform
          fi

      - name: Get EC2 IP
        if: github.event.inputs.tf_action == 'apply'
        id: ec2_ip
        run: echo "ec2_ip=$(terraform output -chdir=terraform -raw instance_ip)" >> $GITHUB_OUTPUT

  ansible-deploy:
    name: Ansible Deployment
    runs-on: ubuntu-latest
    needs: [terraform]
    if: github.event.inputs.tf_action == 'apply'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ needs.terraform.outputs.ec2_ip }} >> ~/.ssh/known_hosts

      - name: Run Ansible Playbook
        run: ansible-playbook ansible/playbook.yml -i "${{ needs.terraform.outputs.ec2_ip}}," -u $ANSIBLE_USER --private-key ~/.ssh/id_rsa