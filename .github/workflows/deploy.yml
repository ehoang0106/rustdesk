name: Deploy RustDesk Infrastructure
on:
  workflow_dispatch:
    inputs:
      tf_action:
        description: 'Terraform action (apply/destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

env:
  AWS_REGION: "us-west-1"
  ANSIBLE_USER: "ubuntu"
  

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init 

      - name: Terraform Validate
        run: terraform validate 

      - name: Terraform Plan/Apply/Destroy
        run: |
          if [ "${{ github.event.inputs.tf_action }}" == "apply" ]; then
            terraform plan 
            terraform apply -auto-approve 
            terraform output -raw instance_ip
          else
            terraform destroy -auto-approve 
          fi
      - name: Get EC2 IP
        if: github.event.inputs.tf_action == 'apply'
        id: ec2_ip
        run: |
          IP=$(terraform output -raw instance_ip)
          echo "ec2_ip=$IP" >> $GITHUB_ENV
          
        shell: bash
      
          

      

  ansible-deploy:
    name: Ansible Deployment
    runs-on: ubuntu-latest
    needs: [terraform]
    if: github.event.inputs.tf_action == 'apply'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SSH to EC2    
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOSTNAME:
          USER_NAME: ubuntu
        run: |
          echo "this is the ip: ${{ env.ec2_ip }}"
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${{env.ec2_ip}} '
                cd /home/ubuntu &&
                git clone https://github.com/ehoang0106/rustdesk.git &&
                cd rustdesk &&
                cd ansible &&
                sudo apt-get update && sudo apt-get install -y ansible &&
                ansible-playbook playbook.yml
              '
        shell: bash